@using Microsoft.CST.OAT.Utils;

<input id="@id" type="text" @bind="CurrentInput" />
<button @onclick="AddData">Add Data</button>
<br />
@if (SubProperty.Count > 0)
{
    <select @bind="SelectedIndex">
        @for (int i = 0; i < SubProperty.Count; i++)
        {
            <option value="@i">@SubProperty[i]</option>
        }
    </select>
    <button @onclick="RemoveData">Remove Data</button>
}

@code {
    [Parameter]
    public object Object { get; set; }

    [Parameter]
    public string SubPath { get; set; }

    [Parameter]
    public string id { get; set; }

    int SelectedIndex { get; set; }

    string CurrentInput { get; set; }

    void AddData(EventArgs eventArgs)
    {
        if (SubProperty == null)
        {
            Helpers.SetValueByPropertyOrFieldName(Object, SubPath, new List<string>());
        }
        SubProperty.Add(CurrentInput);
        CurrentInput = string.Empty;
    }

    void RemoveData(EventArgs eventArgs)
    {
        SubProperty.RemoveAt(SelectedIndex);
    }


    public List<string> SubProperty
    {
        get
        {
            return (List<string>)(Helpers.GetValueByPropertyOrFieldName(Object, SubPath) ?? new List<string>());
        }
        set
        {
            Helpers.SetValueByPropertyOrFieldName(Object, SubPath, value);
        }
    }
}